#include<iostream>
#include <windows.h>
#include<conio.h>
#include <stack>  
using namespace std;


struct coord{
	int x1;
	int y1;
};


unsigned int size_of_field=20;
const char snake='#', bort='*', penpineappleapplepen='@', empt=' ';
const int w=56, a=52, s=50, d=54;
int x, y, last[2];

void ex(){
	cout<<"asinc away\nasinc away\nasinc away\nasinc away\n";
	exit(0);
}
void sett(){
	char accept;
	cout<<"Size of field: "<< size_of_field <<"x"<<size_of_field*2<<" \nDo you want change? (Y/N)\n";
	accept=getch();
	if(accept=='Y' || accept== 'y'){
		cout<<"Input new size:";
		cin>>size_of_field;
		if(size_of_field*2<20)size_of_field=20;
		else if(size_of_field*2>255)size_of_field=255;
		else cout<<endl<<endl<<"Compliete!";	
	}
}

void star(){
	x=size_of_field;
	y=size_of_field/2;
	stack <coord> stak;
	stack <coord> stakbuf;
	stack <coord> apple;
	stack <coord> apbuf;
	coord dob, gates;
	dob.x1=x;
	dob.y1=y;
	stak.push(dob);
	bool live=true;
	char mass[size_of_field][size_of_field*2], t=56;
	int i, j, chetchik=0, snakelen=10;
	
	for(j=0;j<size_of_field;j++)
		for(i=0;i<size_of_field*2;i++){
			mass[j][i]=empt;
		}
			
	
	
	for(j=0;j<size_of_field*2;j++)mass[0][j]='*';
	for(i=0;i<size_of_field;i++){
		cout<<endl;
		mass[i][0]='*';
		mass[i][size_of_field*2-1]='*';
	}
	for(j=0;j<size_of_field*2;j++)mass[size_of_field-1][j]='*';
	
	for(j=0;j<size_of_field;j++){
		for(i=0;i<size_of_field*2;i++){
			cout<<mass[j][i];
		}
		cout<<endl;
	}	
	while(live){
		if(kbhit()) t=getch();
			switch((int)t){
				case w: --y; break;
				case a: --x; break;
				case s: ++y; break;
				case d: ++x; break;
				default: --y; break;
			}
		if(mass[y][x]!=snake && mass[y][x]!=bort){
			dob.x1=x;
			dob.y1=y;
			if(mass[y][x]==penpineappleapplepen){
				snakelen=snakelen+3;
				gates=apple.top();
				while(!apple.empty()  && gates.x1!=dob.x1 && gates.y1!=dob.y1){
						gates=apple.top();
						apbuf.push(gates);
						apple.pop();
				}
				while(!apbuf.empty()){
					apple.push(apbuf.top());
					apbuf.pop();
				}
				mass[y][x]=empt;		
				}
			
			stak.push(dob);
			j=stak.size();
			while(j>snakelen-1){
				while(!stak.empty()){
					stakbuf.push(stak.top());	
					stak.pop();
				}
				stakbuf.pop();
				while(!stakbuf.empty()){
					stak.push(stakbuf.top());	
					stakbuf.pop();
				}
				j=stak.size();
			}
			
			
		}
		else live=false;
		
		system("cls");
		for(j=1;j<size_of_field-1;j++)
		for(i=1;i<size_of_field*2-1;i++)
			mass[j][i]=' ';
		while(!apple.empty()){
			dob=apple.top();
			apbuf.push(dob);
			mass[dob.y1][dob.x1]=penpineappleapplepen;
			apple.pop();
		}
		while(!apbuf.empty()){
			apple.push(apbuf.top());
			apbuf.pop();
		}
		
		
		while(!stak.empty()){
			stakbuf.push(stak.top());
			dob=stak.top();
			mass[dob.y1][dob.x1]=snake;	
			stak.pop();
		}
		while(!stakbuf.empty()){
			stak.push(stakbuf.top());	
			stakbuf.pop();
		}	
		for(j=0;j<size_of_field;j++){
			for(i=0;i<size_of_field*2;i++){
				cout<<mass[j][i];
			}
			cout<<endl;		
		}
		++chetchik;
		Sleep(100);	
		if (chetchik%20==0)snakelen++;
		if (chetchik%50==0){
			j=rand()%size_of_field;
			i=rand()%size_of_field*2;
			if(mass[j][i]==empt)
			dob.x1=i;
			dob.y1=j;
			apple.push(dob);
		}
	}	
}




void menu(string s=""){
	cout<<s;
	
	int i, j, y=20;
	char a, mass[y][y], start[6]={'>','S','t','a','r','t'}, settings[9]={' ','S','e','t','t','i','n','g','s'}, exit[5]={' ','E','x','i','t'};
	for(i=0;i<y;i++)
		for(j=0;j<y;j++){
			mass[i][j]=' ';
		}
	
	
	while(true){
		for(i=0;i<6;i++)mass[3][i+2]=start[i];
		for(i=0;i<9;i++)mass[4][i+2]=settings[i];
		for(i=0;i<5;i++)mass[5][i+2]=exit[i];
		for(i=0;i<10;i++){
			for(j=0;j<y;j++){
				cout<<mass[i][j];
			}
		cout<<endl;
		}
		a=getch();
		switch((int)a){
			case 50: 
				if(start[0]=='>'){start[0]=' '; settings[0]='>';}
				else if(settings[0]=='>'){settings[0]=' '; exit[0]='>';}
				else if(exit[0]=='>'){start[0]='>'; exit[0]=' ';} break;
			case 56: 
				if(start[0]=='>'){start[0]=' '; exit[0]='>';}
				else if(settings[0]=='>'){settings[0]=' '; start[0]='>';}
				else if(exit[0]=='>'){settings[0]='>'; exit[0]=' ';} break;
			case 13: 
				if(start[0]=='>') star(); 
				else if(settings[0]=='>')sett();
				else if(exit[0]=='>')ex(); break;
			default: cout<<endl<<"Use NumLock - 8 and 2 pls!";  break;
		}
		system ("cls");
	}
}

int main(){
menu();
	
	
	
}
